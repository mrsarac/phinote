
.login-page {
  font-size: 16px;
  background: #fff;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: stretch;
  align-content: stretch;
  height: 100vh;
  width: 100vw;
  -webkit-user-select: none;
  -webkit-app-region: drag;



  .left-logo {
    display: flex;


    align-items: center;
    justify-content: center;
    overflow: hidden;
    position: relative;

    order:0;
    flex-grow: 0;
    flex-shrink: 1;
    flex-basis: auto;
    align-self: auto;

    max-width: 850px;
    min-width: 850px;

    flex-direction: column;
    justify-content: center;



    /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#094c72+98,01293f+100 */
    background: rgb(1,26,41);
    background: -webkit-radial-gradient(bottom, ellipse cover,  rgb(1,26,41) 0%,rgb(0,14,22) 100%);
    background: -webkit-radial-gradient(ellipse at bottom, rgb(1,26,41) 0%, rgb(0,14,22) 100%);
    background: -webkit-radial-gradient(bottom, ellipse, rgb(1,26,41) 0%, rgb(0,14,22) 100%);
    background: radial-gradient(ellipse at bottom,  rgb(1,26,41) 0%,rgb(0,14,22) 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#094c72', endColorstr='#01293f',GradientType=1 );

    .phinote-login-logo {
      position: relative;
      z-index: 100;
    }

    .left-logo-bg {
      width: 100%;
      height: 100%;
      position: absolute;

      z-index: 0;
      background-repeat: no-repeat;
      background-image: url("./assets/images/login-bg-3.png");
      background-size: 100% 100%;
    }
  }



  .login-form {

    display: flex;
    align-items: center;
    justify-content: center;


    order:1;
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: auto;
    align-self: auto;
    background-color: #ffffff;


    .form-signin {
      position: relative;
    }

    .login-form-inner {
      display: block;
      margin: 20px;
      width: 300px;


      h2 {
        color: #5c5c5c;
        font-size:21px;
        margin-bottom: 20px;
        font-weight: lighter;
      }
    }

    .form-group {
      color: #8E8E8E;
      display: block;
      margin-bottom: 20px;

      label {
        display: block;
        margin-bottom: 5px;
      }

      &.remember {
        label {
          display: inline;
        }
        input {
          position: relative;
          top: -1px;
        }
      }

      input:-webkit-autofill,
      input:-webkit-autofill:hover,
      input:-webkit-autofill:focus,
      input:-webkit-autofill:active {
        transition: background-color 5000s ease-in-out 0s;
      }

    }
    .form-control {

      -webkit-app-region: no-drag;

      color: #333;
      font-size: 13px;
      width: 100%;
      border: 0px;
      background: #fff;
      padding: 3px;
      border-bottom: 1px solid #F7F7F7;
      -webkit-box-shadow: 0 0 0px 1000px white inset;

      &:focus {
        outline: 0px;
        border-bottom: 1px solid #DFDFDF;
      }

    }
    .btn {

      -webkit-app-region: no-drag;

      font-size: 13px;
      padding: 4px 14px;

      background: #FFFFFF;
      border: 0 solid rgba(0,0,0,0.15);
      box-shadow: 0 0 1px 0 rgba(0,0,0,0.20);
      border-radius: 3px;

      &:hover{
        cursor: pointer;

        /* Button: */

        background: #FFFFFF;
        border: 0 solid rgba(0,0,0,0.15);
        box-shadow: 0 0 1px 0 rgba(0,0,0,0.20);
        border-radius: 3px;
      }
      &:focus {
        outline: none 0;
      }
      &:active {
        outline: none 0;
        color:#fff;
        /* Button: */
        background-image: linear-gradient(-180deg, #6CB3FA 0%, #067DFF 100%);
        /* Sketch doesnt export gradient borders at this point */
        box-shadow: 0 0 0 0 rgba(0,0,0,0.15);
        border-radius: 3.5px;
      }



      .primary {

      }
    }
  }

  .new-member {

    p {
      margin: 15px 0;
      padding: 0;
      font-size: 13px;
      color: #8E8E8E;
    }

    a {
      color: #339af3;
      font-weight: bold;
      text-decoration: none;
      &:hover {
        color: #1c7bce;
      }
    }

  }

}



@keyframes move-twink-back {
  from {background-position:0 0;}
  to {background-position:-10000px 5000px;}
}
@-webkit-keyframes move-twink-back {
  from {background-position:0 0;}
  to {background-position:-10000px 5000px;}
}
@-moz-keyframes move-twink-back {
  from {background-position:0 0;}
  to {background-position:-10000px 5000px;}
}
@-ms-keyframes move-twink-back {
  from {background-position:0 0;}
  to {background-position:-10000px 5000px;}
}

@keyframes move-clouds-back {
  from {background-position:0 0;}
  to {background-position:10000px 0;}
}
@-webkit-keyframes move-clouds-back {
  from {background-position:0 0;}
  to {background-position:10000px 0;}
}
@-moz-keyframes move-clouds-back {
  from {background-position:0 0;}
  to {background-position:10000px 0;}
}
@-ms-keyframes move-clouds-back {
  from {background-position: 0;}
  to {background-position:10000px 0;}
}

.stars, .twinkling {
  position:absolute;
  top:0;
  left:0;
  right:0;
  bottom:0;
  width:100%;
  height:100%;
  display:block;
}

.stars {
  background:#000 url(./assets/images/stars.png) repeat top center;
  z-index:0;
}





@function box-shadow($stars) {
  $bxshadow: ();
  @for $i from 1 to $stars {
    $bxshadow: append($bxshadow, (random(2000) + 0px) (random(2000) + 0px) #fff, comma);
  }
  @return unquote($bxshadow);
}

$bxshadow-large: box-shadow(300);
$bxshadow-medium: box-shadow(500);
$bxshadow-small: box-shadow(800);

.stars.large {
  height: 3px;
  width: 3px;
  background: transparent;
  box-shadow: $bxshadow-large;
  animation: blink-large 7s infinite;
}
.stars.medium {
  height: 2px;
  width: 2px;
  background: transparent;
  box-shadow: $bxshadow-medium;
  animation: blink-medium 5s infinite;
}
.stars.small {
  height: 1px;
  width: 1px;
  background: transparent;
  box-shadow: $bxshadow-small;
  animation: blink-small 3s infinite;
}

@keyframes blink-large {
  0% {
    box-shadow: $bxshadow-large;
  }
  70% {
    $colors: '#fff', 'transparent';
    $stars: $bxshadow-large;
    @for $i from 1 to length($stars) {
      $star: set-nth(nth($stars, $i), 3, unquote(nth($colors, random(length($colors)))));
      $stars: set-nth($stars, $i, $star);
    }
    box-shadow: $stars;
  }
  100% {
    box-shadow: $bxshadow-large;
  }
}
@keyframes blink-medium {
  0% {
    box-shadow: $bxshadow-medium;
  }
  70% {
    $colors: '#fff', 'transparent';
    $stars: $bxshadow-medium;
    @for $i from 1 to length($stars) {
      $star: set-nth(nth($stars, $i), 3, unquote(nth($colors, random(length($colors)))));
      $stars: set-nth($stars, $i, $star);
    }
    box-shadow: $stars;
  }
  100% {
    box-shadow: $bxshadow-medium;
  }
}
@keyframes blink-small {
  0% {
    box-shadow: $bxshadow-small;
  }
  70% {
    $colors: '#fff', 'transparent';
    $stars: $bxshadow-small;
    @for $i from 1 to length($stars) {
      $star: set-nth(nth($stars, $i), 3, unquote(nth($colors, random(length($colors)))));
      $stars: set-nth($stars, $i, $star);
    }
    box-shadow: $stars;
  }
  100% {
    box-shadow: $bxshadow-small;
  }
}
